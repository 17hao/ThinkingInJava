plugins {
    id "java"
    id "groovy"
    id "com.google.protobuf" version "0.8.8"
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation(
            'org.junit.jupiter:junit-jupiter-api:5.3.1',
            'com.google.code.gson:gson:2.8.5',
            'org.apache.logging.log4j:log4j-api:2.12.1',
            'org.apache.logging.log4j:log4j-core:2.12.1',
            'org.slf4j:slf4j-api:1.7.25',
            'org.slf4j:slf4j-simple:1.7.25',
            'redis.clients:jedis:2.9.0',
            'org.apache.kafka:kafka-clients:2.3.0',
            'javax.inject:javax.inject:1',
            'com.google.inject:guice:4.2.2',
            'io.grpc:grpc-netty-shaded:1.24.0',
            'io.grpc:grpc-protobuf:1.24.0',
            'io.grpc:grpc-stub:1.24.0',
            'com.lmax:disruptor:3.4.2',
            'io.netty:netty-all:4.1.42.Final',
            'javax.servlet:javax.servlet-api:4.0.0',
            'org.codehaus.groovy:groovy:2.5.8'
    )
}

group = 'xyz.shiqihao'
version = '1.0-SNAPSHOT'
description = 'javacode'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/proto/generated'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.9.1"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.19.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/main/proto/generated"
}

task printSourceSets {
    sourceSets { sourceSet ->
        println sourceSet.main.runtimeClasspath
    }
}

task runMain(type: JavaExec) {
    main = 'xyz.shiqihao.misc.Base64Encode'
    classpath = sourceSets.main.runtimeClasspath
}

task hello() {
    doLast {
        println "Hello, world!"
    }
}

task intro() {
    dependsOn hello
    doLast {
        println "I am gradle."
    }
}

hello.doFirst {
    println("hello, first")
}

hello.doLast {
    println("hello, jupiter")
}

task myTask {
    ext.myProperty = "mar"
}

task printTaskProperty {
    doLast {
        println(myTask.myProperty)
    }
}

task distribution {
    doLast {
        println "We build the zip with version=$version"
    }
}

task release {
    dependsOn distribution
    doLast {
        println "We release now."
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(":release")) {
        version = '1.0'
    } else {
        version = '1.0-snapshot'
    }
}

task printProjectProperties {
    doLast {
        println "project name: " + project.name
        println "project path: " + project.path
        println "project description: " + project.description
        println "project version: " + version
        println "project buildDir: " + buildDir
        println "project group: " + project.group
    }
}